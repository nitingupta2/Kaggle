{
    "contents" : "---\ntitle: \"Kaggle - Random Acts Of Pizza\"\nauthor: \"Nitin Gupta\"\ndate: \"Saturday, October 11, 2014\"\noutput: html_document\n---\n\n### Reading Data\n```{r}\nlibrary(jsonlite)\n\ndfRaw <- fromJSON(\"train.json\")\nvFeaturesInRaw <- colnames(dfRaw)\n\ndfTest <- fromJSON(\"test.json\")\nvFeaturesInTest <- c(colnames(dfTest), \"requester_received_pizza\")\n\n# Remove extra features from dfRaw\nvFeaturesNotInTest <- vFeaturesInRaw[!(vFeaturesInRaw %in% vFeaturesInTest)]\ndfRaw <- dfRaw[,vFeaturesInTest]\n\n# Rename features to shorten length of feature names\nvFeaturesShort <- c(\"giver\",\"reqId\",\"textEdited\",\"title\",\"accAge\",\"daysSinceRAOPPost\",\n                    \"nCmntsOnReddit\",\"nCmntsOnRAOP\",\"nPostsOnReddit\",\"nPostsOnRAOP\",\"nSubReddits\",\"listSubReddits\",\n                    \"netVotes\",\"totalVotes\",\"requester\",\"timestamp\",\"timestampUTC\",\"recdPizza\")\ncolnames(dfRaw) <- vFeaturesShort\ncolnames(dfTest) <- vFeaturesShort[-length(vFeaturesShort)]\n```\n\n\n### Feature Engineering\n```{r featureEngg, echo=FALSE, message=FALSE, warning=FALSE}\n# Remove features not important for prediction\nvFeaturesToInclude <- c(\"textEdited\",\"title\",\"accAge\",\"daysSinceRAOPPost\",\"nCmntsOnReddit\",\"nCmntsOnRAOP\",\n                        \"nPostsOnReddit\",\"nPostsOnRAOP\",\"nSubReddits\",\"netVotes\",\"totalVotes\",\"requester\",\n                        \"timestampUTC\",\"recdPizza\")\n\npreProcessData <- function(df=data.frame()) {\n    if(\"recdPizza\" %in% colnames(df)) {\n        dfSub <- df[,vFeaturesToInclude]\n        dfSub$recdPizza <- as.factor(dfSub$recdPizza)\n    }\n    else {\n        dfSub <- df[,vFeaturesToInclude[-length(vFeaturesToInclude)]]\n    }\n    \n    # Add Features: upVotes & dnVotes\n    dfSub$upVotes <- (dfSub$totalVotes + dfSub$netVotes)/2\n    dfSub$dnVotes <- (dfSub$totalVotes - dfSub$netVotes)/2\n    \n    return(dfSub)\n}\n\ndfRawSub <- preProcessData(dfRaw)\ndfFinal <- preProcessData(dfTest)\n```\n\n\n### Exploratory Data Analysis\n```{r eda, echo=FALSE, message=FALSE, warning=FALSE}\nsummary(dfRawSub[,-c(1:2)])\nstr(dfRawSub[,-c(1:2)])\n\n# Barplot & Histograms\nwith(dfRawSub, barplot(table(recdPizza), main=\"Received Pizza\"))\nwith(dfRawSub, hist(accAge, col=\"red\"))\nwith(dfRawSub, hist(daysSinceRAOPPost, col=\"red\"))\nwith(dfRawSub, hist(nCmntsOnReddit, col=\"red\"))\nwith(dfRawSub, hist(nCmntsOnRAOP, col=\"red\"))\nwith(dfRawSub, hist(nPostsOnReddit, col=\"red\"))\nwith(dfRawSub, hist(nPostsOnRAOP, col=\"red\"))\nwith(dfRawSub, hist(nSubReddits, col=\"red\"))\nwith(dfRawSub, hist(upVotes, col=\"red\"))\nwith(dfRawSub, hist(dnVotes, col=\"red\"))\n\n# Boxplots by recdPizza\nwith(dfRawSub, boxplot(log(dnVotes) ~ recdPizza))\n\n# dfClean <- dfRawSub[,-c(1:2)]\n# library(caret)\n# featurePlot(x=dfClean, y=dfClean$recdPizza, plot=\"pairs\")\n```\n\n\n### Model Building\n```{r models, echo=FALSE, message=FALSE, warning=FALSE}\ndfClean <- dfRawSub[,-c(1:2)]\n\nlibrary(caret)\nset.seed(11)\ninTrain <- createDataPartition(dfClean$recdPizza, p=0.7, list=FALSE)\ntraining <- dfClean[inTrain, ]\nvalidation <- dfClean[-inTrain, ]\nrm(inTrain)\n\n\nlibrary(rf)\nset.seed(11)\nmodel_1 <- randomForest(recdPizza ~ ., data=training)\npred_1 <- predict(model_1, validation)\ncm_1 <- confusionMatrix(pred_1, validation$recdPizza)\ncm_1\n```\n\n\n",
    "created" : 1413045895956.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2487392316",
    "id" : "89DB3320",
    "lastKnownWriteTime" : 1413154363,
    "path" : "C:/Backups/Kaggle/RandomActsOfPizza/raop.Rmd",
    "project_path" : "raop.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "type" : "r_markdown"
}